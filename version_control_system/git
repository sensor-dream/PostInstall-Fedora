#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @File   : git
## @Author : sensor-dream
## @Email  : sensor-dream@sensor-dream.ru
## @Site   : https://sensor-dream.ru
## @Date   : 29.07.2019, 23:26:47

#
#   Декларируем имя файла
#

declare -rx version_control_system_git_script_source="$BASH_SOURCE";

if [[ -z "$main_run_script_path" ]]; then
  declare -rx main_run_script_path="$(pwd)";
  echo "Скрипт запускается из ${main_run_script_path}";
fi

#
#   Подключаем общую библиотеку и общую конфигурацию
#

if [[ -z "$main_cfg_script_source" ]]; then
  check=1;
  while [[ "$check" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../;
      else
        cd "${main_run_script_path}";
        check=0;
        echo '\e[47;31m'"!!! Не найден общий файл конфигурации !!!\033[0m";
        tput sgr0;
        exit 1;
      fi
    else
      check=0;
      if [[ -z "$main_cfg_script_source" ]]; then
        declare -rx main_project_path="$(pwd)";
        . "$main_project_path/main.cfg";
      fi
      cd "${main_run_script_path}";
    fi
  done
fi

echo_w "Подключаем $(readlink -m $version_control_system_git_script_source)";

function version_control_system_install_git(){

  local install_pkg=(\
#   Fast Version Control System
git \
## Meta-package to pull in all git tools
git-all \
git-core \
git-lfs \
git-daemon \
git-extras \
git-instaweb \
git-merge-changelog \
git-subrepo \
git-subtree  \
git-archive-all \
git-crypt \
git-evtag \
git-fame \
git-publish \
git-review \
git-tools \
git-xcleaner \
gitg \
git-clang-format \
git-cpan-patch \
git-ftp \
git-secret \
git-time-metric \
gitstats \
git-bz \
git-cal \
## git-pull-request conflict git-extras
# git-pull-request \
);

  pkg -a -- "${install_pkg[*]}";

}

function version_control_system_main_git_script_source(){

  echo_m "Initialise main function of git script source";

  version_control_system_install_git "$@";

}

version_control_system_main_git_script_source "$@";
