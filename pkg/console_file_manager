#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @File   : console_file_manager
## @Author : sensor-dream
## @Email  : sensor-dream@sensor-dream.ru
## @Site   : https://sensor-dream.ru
## @Date   : 11.08.2019, 14:11:14

#
#   Декларируем имя файла
#

declare -rx pkg_console_file_manager_script_source="$BASH_SOURCE";

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)";
  echo "Script runs from ${main_run_script_path}";
fi

#
#   Подключаем общую библиотеку и общую конфигурацию
#

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1;
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../;
      else
        cd ${main_run_script_path};
        check=0;
        echo '\e[47;31m'"!!! Not found configuration shared file !!!\033[0m";
        tput sgr0;
        exit 1;
      fi
    else
      check=0;
      declare -rx main_project_path="$(pwd)";
      . "${main_project_path}/main.cfg";
      cd "${main_run_script_path}";
    fi
  done
fi

echo_w "Connect $(readlink -m ${pkg_console_file_manager_script_source})";

function install_pkg_console_file_manager(){

  local install_pkg=(\
# URL          : http://www.midnight-commander.org/
# Лицензия     : GPLv3+
# Description  : Midnight Commander is a visual shell much like a file manager, only with
# : many more features. It is a text mode application, but it also includes
# : mouse support. Midnight Commander's best features are its ability to FTP,
# : view tar and zip files, and to poke into RPMs for specific files.
#
'mc' \
#
# URL          : https://ranger.github.io/
# Лицензия     : GPLv3+
# Description  : Ranger is a free console file manager that gives you greater flexibility and a
# : good overview of your files without having to leave your *nix console. It
# : visualizes the directory tree in two dimensions: the directory hierarchy on
# : one, lists of files on the other, with a preview to the right so you know where
# : you'll be going.
#
# 'ranger' \
#
# Summary      : The missing terminal file browser for X
# URL          : https://github.com/jarun/nnn
# Лицензия     : BSD
# Description  : nnn is probably the fastest and most resource-sensitive (with all
# : its capabilities) file browser you have ever used. It's extremely flexible
# : too - integrates with your DE and favourite GUI utilities, works with
# : the desktop opener, supports bookmarks, has smart navigation shortcuts,
# : navigate-as-you-type mode, disk usage analyzer mode, comprehensive file
# : details and much more. nnn was initially forked from noice but is
# : significantly different today.
# :
# : Cool things you can do with nnn:
# :
# :  - open any file in the default desktop application or a custom one
# :  - navigate-as-you-type (search-as-you-type enabled even on directory switch)
# :  - check disk usage with number of files in current directory tree
# :  - run desktop search utility (gnome-search-tool or catfish) in any directory
# :  - copy absolute file paths to clipboard, spawn a terminal and use the paths
# :  - navigate instantly using shortcuts like ~, -, & or handy bookmarks
# :  - use cd ..... at chdir prompt to go to a parent directory
# :  - detailed file stats, media info, list and extract archives
# :  - pin a directory you may need to revisit and jump to it anytime
# :  - lock the current terminal after a specified idle time
# :  - change directory on exit
#
# 'nnn' \
# URL          : https://github.com/corporateshark/WalCommander
# Лицензия     : MIT
# Description  : File manager mimicking the look-n-feel of Far Manager.
#
'wcm' \
#
# Краткое опис : File manager with curses interface, which provides Vi[m]-like environment
# URL          : http://vifm.info/
# Лицензия     : GPLv2+
# Описание     : Vifm is a curses based vi[m] like file manager extended with some useful ideas
#              : from mutt. If you use vi[m], vifm gives you complete keyboard control over your
#              : files without having to learn a new set of commands. It goes not just about
#              : vi[m] like keybindings, but also about modes, options, registers, commands and
#              : other things you might already like in vi[m].
#              : 
#              : Just like vi[m], vifm tries to adhere to the Unix philosophy. So instead of
#              : working solutions which are set in stone user is provided with a set of means
#              : for customization of vifm to one's likings. Though builtin functionality should
#              : be enough for most of use cases.
'vifm' \
# Краткое опис : A vim-like file manager
# URL          : https://ranger.github.io/
# Лицензия     : GPLv3+
# Описание     : Ranger is a free console file manager that gives you greater flexibility and a
#              : good overview of your files without having to leave your *nix console. It
#              : visualizes the directory tree in two dimensions: the directory hierarchy on
#              : one, lists of files on the other, with a preview to the right so you know where
#              : you'll be going.
'ranger' \
);

  pkg -a "$@" -- "${install_pkg[*]}";


  # CFILES FAST TERMINAL FILE MANAGER
  # Cfiles - это быстрый файловый менеджер терминала, написанный на C и использующий библиотеку ncurses, похожий на Ranger, и он также использует сочетания клавиш vi.

  local key='';
  echo_m -n "Install CFILES FAST TERMINAL FILE MANAGER ? y/n [n]: ";
  read key;

  if [[ "${key}" == "Y" || "${key}" == "y" ]]; then

    dnf -y groupinstall "Development Tools";
    dnf -y install "ncurses" "ncurses-base" "ncurses-libs" "ncurses-compat-libs" "ncurses-devel" "ncurses-static" "ncurses-term" "ncurses-c++-libs";

    cd "${main_run_script_path}";
    mkdir "${main_run_script_path}/${temp_one_path}";
    git clone "https://github.com/mananapr/cfiles.git" "${main_run_script_path}/${temp_one_path}";
    cd "${main_run_script_path}/${temp_one_path}" &&gcc cf.c -lncurses -o cf && chmod +x cf && mv cf "/usr/bin/cf";
    cd "${main_run_script_path}";
    rm -f -r "${main_run_script_path}/${temp_one_path}";

  fi

}

function main_pkg_console_file_manager_script_source(){

  echo_m "Initialise main function of console_file_manager script source";

  install_pkg_console_file_manager "$@";

}

main_pkg_console_file_manager_script_source "$@";
