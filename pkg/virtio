#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @File   : virtio
## @Author : sensor-dream (SDBS)
## @Email  : sensor-dream@sensor-dream.ru
## @Site   : https://sensor-dream.ru
## @Date   : 30.04.2019, 17:30:26

#
#   Декларируем имя файла
#

declare -rx pkg_virtio_script_source="$BASH_SOURCE";

if [[ -z "$main_run_script_path" ]]; then
  declare -rx main_run_script_path="$(pwd)";
  echo "Скрипт запускается из ${main_run_script_path}";
fi

#
#   Подключаем общую библиотеку и общую конфигурацию
#

if [[ -z "$main_cfg_script_source" ]]; then
  check=1;
  while [[ "$check" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../;
      else
        cd "${main_run_script_path}";
        check=0;
        echo '\e[47;31m'"!!! Не найден общий файл конфигурации !!!\033[0m";
        tput sgr0;
        exit 1;
      fi
    else
      check=0;
      if [[ -z "$main_cfg_script_source" ]]; then
        declare -rx main_project_path="$(pwd)";
        . "$main_project_path/main.cfg";
      fi
      cd "${main_run_script_path}";
    fi
  done
fi

echo_w "Подключаем $(readlink -m $pkg_virtio_script_source)";


function main_pkg_virtio_script_source(){

  echo_m "Initialise main function";

  . "${main_project_path}/pkg/repo/virtio";

  install_pkg=(\
# virtio-forwarder is a userspace networking application that forwards
# : bi-directional traffic between SR-IOV virtual functions and virtio networking
# : devices in QEMU virtual machines. virtio-forwarder implements a virtio backend
# : driver using the DPDK’s vhost-user library and services designated VFs by means
# : of the DPDK poll mode driver (PMD) mechanism.
'virtio-forwarder' \
'virtio-win' \
);

  # install_packages "${install_pkg[*]}";

  force_upgrade_packages "${install_pkg[*]}";

}

main_pkg_virtio_script_source "$@";