#!/bin/env bash
# -*- coding: utf-8 -*-
## @File   : zram
## @Author : sensor-dream
## @Email  : sensor-dream@sensor-dream.ru
## @Site   : https://sensor-dream.ru
## @Date   : 2019-2-5 21:41:28

#
#   Декларируем имя файла
#

declare -rx preparation_zram_script_source="$BASH_SOURCE";

if [[ -z "$main_run_script_path" ]]; then
  declare -rx main_run_script_path="$(pwd)";
  echo "Скрипт запускается из ${main_run_script_path}";
fi

#
#   Подключаем общую библиотеку и общую конфигурацию
#

if [[ -z "$main_cfg_script_source" ]]; then
  check=1;
  while [[ "$check" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../;
      else
        cd "${main_run_script_path}";
        check=0;
        echo '\e[47;31m'"!!! Не найден общий файл конфигурации !!!\033[0m";
        tput sgr0;
        exit 1;
      fi
    else
      check=0;
      if [[ -z "$main_cfg_script_source" ]]; then
        declare -rx main_project_path="$(pwd)";
        . "$main_project_path/main.cfg";
      fi
      cd "${main_run_script_path}";
    fi
  done
fi

echo_w "Подключаем $preparation_zram_script_source";


function configure_zram(){

  check_root;


  local install_pkg=(\
# ZRAM is a Linux block device that can be used for compressed swap in memory.
# : It's useful in memory constrained devices. This provides a service to setup
# : ZRAM as a swap device based on criteria such as available memory.
'zram' \
# Systemd unit generator for zram devices.
'zram-generator' \
# This package contains module for ZRAM configuration.
'udisks2-zram' \
);

  if [[ "$1" == "-u" ]];then
    remove_packages "${install_pkg[*]}";
  else
    install_packages "${install_pkg[*]}";
    systemctl_activate_and_start_or_restart_service zram-swap;
  fi

## swapon
## swapon -h
## zramctl
## zramctl -h

}

configure_zram "$@";
